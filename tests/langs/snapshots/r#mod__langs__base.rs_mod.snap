---
source: tests/langs/mod.rs
expression: inscope_parts
---
- n: 17
  l: "mod parent {\n"
  m: ^^^^^^^^^^^^^^
- n: 18
  l: "    pub fn x() {\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 19
  l: "        println!(\"Function x from parent module\");\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 20
  l: "    }\n"
  m: ^^^^^^^
- n: 21
  l: "}\n"
  m: "^  "
- n: 23
  l: "mod sibling {\n"
  m: ^^^^^^^^^^^^^^^
- n: 24
  l: "    pub fn y() {\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 25
  l: "        println!(\"Function y from sibling module\");\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 26
  l: "    }\n"
  m: ^^^^^^^
- n: 27
  l: "}\n"
  m: "^  "
- n: 251
  l: "mod tests {\n"
  m: ^^^^^^^^^^^^^
- n: 252
  l: "    use super::*;\n"
  m: ^^^^^^^^^^^^^^^^^^^
- n: 253
  l: "\n"
  m: ^^
- n: 254
  l: "    #[test]\n"
  m: ^^^^^^^^^^^^^
- n: 255
  l: "    fn some_test() {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^
- n: 256
  l: "        assert_eq!(3, 3);\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 257
  l: "    }\n"
  m: ^^^^^^^
- n: 258
  l: "\n"
  m: ^^
- n: 259
  l: "    #[rstest]\n"
  m: ^^^^^^^^^^^^^^^
- n: 260
  l: "    #[case(3)]\n"
  m: ^^^^^^^^^^^^^^^^
- n: 261
  l: "    fn test_with_rstest(#[case] i: u64) {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 262
  l: "        assert_eq!(1337, 1337);\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 263
  l: "    }\n"
  m: ^^^^^^^
- n: 264
  l: "}\n"
  m: "^  "
- n: 328
  l: "mod unsafe_stuff {\n"
  m: ^^^^^^^^^^^^^^^^^^^^
- n: 329
  l: "    const UNSAFE: &str = \"unsafe\"; // This unsafe mention will not be found.\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 330
  l: "\n"
  m: ^^
- n: 331
  l: "    unsafe fn unsafe_function() {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 332
  l: "        // Unsafe code here\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 333
  l: "    }\n"
  m: ^^^^^^^
- n: 334
  l: "\n"
  m: ^^
- n: 335
  l: "    async unsafe fn unsafe_async_function() {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 336
  l: "        // Unsafe code here\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 337
  l: "    }\n"
  m: ^^^^^^^
- n: 338
  l: "\n"
  m: ^^
- n: 339
  l: "    fn function_with_unsafe_block() {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 340
  l: "        unsafe {\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 341
  l: "            // Unsafe code here\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 342
  l: "        }\n"
  m: ^^^^^^^^^^^
- n: 343
  l: "    }\n"
  m: ^^^^^^^
- n: 344
  l: "\n"
  m: ^^
- n: 345
  l: "    unsafe trait UnsafeTrait {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 346
  l: "        // Trait definition\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 347
  l: "    }\n"
  m: ^^^^^^^
- n: 348
  l: "\n"
  m: ^^
- n: 349
  l: "    unsafe impl UnsafeTrait for SomeType {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 350
  l: "        // Implementation\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 351
  l: "    }\n"
  m: ^^^^^^^
- n: 352
  l: "\n"
  m: ^^
- n: 353
  l: "    trait SomeTrait {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^
- n: 354
  l: "        unsafe fn unsafe_method(&self);\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 355
  l: "        async unsafe fn async_unsafe_method(&self);\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 356
  l: "    }\n"
  m: ^^^^^^^
- n: 357
  l: "}\n"
  m: "^  "
