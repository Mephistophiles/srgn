---
source: tests/langs/mod.rs
expression: inscope_parts
---
- n: 184
  l: "async fn async_main() -> Result<(), ()> {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 185
  l: "    // Open a connection to the mini-redis address.\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 186
  l: "    let mut client = client::connect(\"127.0.0.1:6379\").await?;\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 187
  l: "\n"
  m: ^^
- n: 188
  l: "    // Set the key \"hello\" with value \"world\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 189
  l: "    client.set(\"hello\", \"world\".into()).await?;\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 190
  l: "\n"
  m: ^^
- n: 191
  l: "    // Get key \"hello\"\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 192
  l: "    let result = client.get(\"hello\").await?;\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 193
  l: "\n"
  m: ^^
- n: 194
  l: "    println!(\"got value from the server; result={:?}\", result);\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 195
  l: "\n"
  m: ^^
- n: 196
  l: "    Ok(())\n"
  m: ^^^^^^^^^^^^
- n: 197
  l: "}\n"
  m: "^  "
- n: 199
  l: "pub async fn async_pub_fn() -> Result<(), ()> {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 200
  l: "    Ok(())\n"
  m: ^^^^^^^^^^^^
- n: 201
  l: "}\n"
  m: "^  "
- n: 335
  l: "    async unsafe fn unsafe_async_function() {\n"
  m: "    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
- n: 336
  l: "        // Unsafe code here\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 337
  l: "    }\n"
  m: "^^^^^  "
