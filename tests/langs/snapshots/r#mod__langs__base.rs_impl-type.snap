---
source: tests/langs/mod.rs
expression: inscope_parts
---
- n: 74
  l: "impl TestStruct {\n"
  m: ^^^^^^^^^^^^^^^^^^^
- n: 75
  l: "    fn new() -> Self {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^
- n: 76
  l: "        TestStruct {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^
- n: 77
  l: "            instance_var: String::from(\"hello\"),\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 78
  l: "        }\n"
  m: ^^^^^^^^^^^
- n: 79
  l: "    }\n"
  m: ^^^^^^^
- n: 80
  l: "\n"
  m: ^^
- n: 81
  l: "    /*\n"
  m: ^^^^^^^^
- n: 82
  l: "        More comment types\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 83
  l: "    */\n"
  m: ^^^^^^^^
- n: 84
  l: "\n"
  m: ^^
- n: 85
  l: "    // Static decorator for methods\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 86
  l: "    fn static_decorator<F>(func: F) -> impl Fn()\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 87
  l: "    where\n"
  m: ^^^^^^^^^^^
- n: 88
  l: "        F: Fn(),\n"
  m: ^^^^^^^^^^^^^^^^^^
- n: 89
  l: "    {\n"
  m: ^^^^^^^
- n: 90
  l: "        // Decorator for static methods.\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 91
  l: "        move || {\n"
  m: ^^^^^^^^^^^^^^^^^^^
- n: 92
  l: "            println!(\"Static method decorator called\");\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 93
  l: "            func();\n"
  m: ^^^^^^^^^^^^^^^^^^^^^
- n: 94
  l: "        }\n"
  m: ^^^^^^^^^^^
- n: 95
  l: "    }\n"
  m: ^^^^^^^
- n: 96
  l: "\n"
  m: ^^
- n: 97
  l: "    // Method\n"
  m: ^^^^^^^^^^^^^^^
- n: 98
  l: "    fn instance_method(&mut self) {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 99
  l: "        // Instance method.\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 100
  l: "        self.instance_var = \"Instance variable\".to_string();\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 101
  l: "        println!(\"Instance variable is {}\", self.instance_var);\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 102
  l: "    }\n"
  m: ^^^^^^^
- n: 103
  l: "\n"
  m: ^^
- n: 104
  l: "    fn static_method() {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 105
  l: "        // Static method.\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 106
  l: "        println!(\"Inside static method\");\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 107
  l: "    }\n"
  m: ^^^^^^^
- n: 108
  l: "}\n"
  m: "^  "
- n: 117
  l: "impl TestEnum {\n"
  m: ^^^^^^^^^^^^^^^^^
- n: 118
  l: "    fn match_statement(x: TestEnum) {\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 119
  l: "        // Function demonstrating match statement.\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 120
  l: "        match x {\n"
  m: ^^^^^^^^^^^^^^^^^^^
- n: 121
  l: "            TestEnum::VariantOne => println!(\"One\"),\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 122
  l: "            TestEnum::VariantTwo => println!(\"Two\"),\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 123
  l: "            TestEnum::VariantOther => println!(\"Other\"),\n"
  m: ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
- n: 124
  l: "        }\n"
  m: ^^^^^^^^^^^
- n: 125
  l: "    }\n"
  m: ^^^^^^^
- n: 126
  l: "}\n"
  m: "^  "
- n: 299
  l: "impl Y {}\n"
  m: "^^^^^^^^^  "
- n: 300
  l: "impl<T> Y<T> {}\n"
  m: "^^^^^^^^^^^^^^^  "
